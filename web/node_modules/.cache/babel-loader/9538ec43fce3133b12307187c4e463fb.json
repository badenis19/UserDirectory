{"ast":null,"code":"import _slicedToArray from \"/Users/warren/code/badenis19/UserDirectory/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/Users/warren/code/badenis19/UserDirectory/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/warren/code/badenis19/UserDirectory/web/src/app/components/Form/index.jsx\";\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n    align-self: flex-start;\\n    flex-grow: 0;\\n  \"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\" \\n  padding: 1rem;\\n  box-shadow: 0 0.1rem 0.2rem 0 #00000080;\\n  background-color: #ffffff;\\n  align-self: stretch;\\n  min-width: 25rem;\\n\\n  & > *:not(:last-child){\\n    margin-bottom: 1rem;\\n  }\\n\\n  \", \"\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\" \\n  padding: 1rem;\\n  box-shadow: 0 0.1rem 0.2rem 0 #00000080;\\n  background-color: #f5f5f5;\\n  margin-top: 1rem;\\n  \\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from 'react';\nimport Input from '../Input';\nimport styled from 'styled-components';\nimport { func, string } from 'prop-types';\nimport Button from '../Button';\nimport { media } from 'ux/media';\nvar Message = styled.div(_templateObject());\nvar Editor = styled.form(_templateObject2(), media.tabletUp(_templateObject3()));\n\nvar Form = function Form(_ref) {\n  var heading = _ref.heading,\n      saveForm = _ref.saveForm;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      messages = _useState2[0],\n      setMessages = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      password = _useState6[0],\n      setPassword = _useState6[1];\n\n  var isFormValid = function isFormValid() {\n    if (!!email && !!password) {\n      return true;\n    }\n\n    return false;\n  };\n\n  var handleSaveForm = function handleSaveForm() {\n    setMessages([]);\n\n    if (isFormValid()) {\n      saveForm({\n        email: email,\n        password: password\n      }, setMessages);\n    }\n\n    setEmail(\"\");\n    setPassword(\"\");\n  };\n\n  return React.createElement(Editor, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, heading), messages.map(function (message, index) {\n    return React.createElement(Message, {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, message);\n  }), React.createElement(Input, {\n    label: \"Email\",\n    type: \"text\",\n    id: \"email\",\n    value: email,\n    onChange: setEmail,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }), React.createElement(Input, {\n    label: \"Password\",\n    type: \"password\",\n    id: \"password\",\n    value: password,\n    onChange: setPassword,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }), React.createElement(Button, {\n    \"data-testid\": \"Save\",\n    disabled: !isFormValid(),\n    onClick: handleSaveForm,\n    type: \"button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \"Save\"));\n};\n\nForm.propTypes = {\n  heading: string.isRequired,\n  saveForm: func.isRequired\n};\nexport default Form;","map":{"version":3,"sources":["/Users/warren/code/badenis19/UserDirectory/web/src/app/components/Form/index.jsx"],"names":["React","useState","Input","styled","func","string","Button","media","Message","div","Editor","form","tabletUp","Form","heading","saveForm","messages","setMessages","email","setEmail","password","setPassword","isFormValid","handleSaveForm","map","message","index","propTypes","isRequired"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport Input from '../Input'\nimport styled from 'styled-components'\nimport { func, string } from 'prop-types'\nimport Button from '../Button'\nimport { media } from 'ux/media'\n\nconst Message = styled.div` \n  padding: 1rem;\n  box-shadow: 0 0.1rem 0.2rem 0 #00000080;\n  background-color: #f5f5f5;\n  margin-top: 1rem;\n  \n`\n\nconst Editor = styled.form` \n  padding: 1rem;\n  box-shadow: 0 0.1rem 0.2rem 0 #00000080;\n  background-color: #ffffff;\n  align-self: stretch;\n  min-width: 25rem;\n\n  & > *:not(:last-child){\n    margin-bottom: 1rem;\n  }\n\n  ${media.tabletUp`\n    align-self: flex-start;\n    flex-grow: 0;\n  `}\n`\n\nconst Form = ({ heading, saveForm }) => {\n\n  const [messages, setMessages] = useState([])\n  const [email, setEmail] = useState(\"\")\n\n  const [password, setPassword] = useState(\"\")\n\n  const isFormValid = () => {\n    if (!!email && !!password) {\n      return true\n    }\n\n    return false\n  }\n\n  const handleSaveForm = () => {\n    setMessages([])\n    if (isFormValid()) {\n\n      saveForm({ email, password }, setMessages)\n    }\n\n    setEmail(\"\")\n    setPassword(\"\")\n  }\n\n  return (\n    <Editor>\n      <h2>{heading}</h2>\n      {messages.map((message, index) => (\n        <Message key={index}>{message}</Message>\n      ))}\n      <Input\n        label='Email'\n        type='text'\n        id='email'\n        value={email}\n        onChange={setEmail}\n      />\n      <Input\n        label='Password'\n        type='password'\n        id='password'\n        value={password}\n        onChange={setPassword}\n      />\n      <Button\n        data-testid=\"Save\"\n        disabled={!isFormValid()}\n        onClick={handleSaveForm}\n        type=\"button\"\n      >\n        Save\n      </Button>\n    </Editor>\n  )\n}\n\nForm.propTypes = {\n  heading: string.isRequired,\n  saveForm: func.isRequired\n}\n\nexport default Form\n"]},"metadata":{},"sourceType":"module"}